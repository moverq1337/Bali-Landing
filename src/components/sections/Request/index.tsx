import { FC, useState } from 'react'
import { toast } from 'react-toastify'
import { SectionProps } from '../../../types'
import Button from '../../ui/Button'

const TELEGRAM_API = import.meta.env.VITE_APP_TELEGRAM_API ?? ''
const USER_ID = import.meta.env.VITE_APP_USER_ID ?? ''

const Request: FC<SectionProps> = ({ className = '', onClose }) => {
	const [formData, setFormData] = useState({
		name: '',
		phone: '',
		adults: '',
		children: '',
		destination: '',
		wishes: '',
	})

	const handleChange = (
		e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
	) => {
		setFormData({ ...formData, [e.target.name]: e.target.value })
	}

	const handleSubmit = async (e: React.FormEvent) => {
		e.preventDefault()

		if (!TELEGRAM_API || USER_ID === '') {
			toast.error(
				'–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.'
			)
			return
		}

		const text = `
üìå –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç—É—Ä:
üë§ –ò–º—è: ${formData.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫: ${formData.adults} –≤–∑—Ä–æ—Å–ª—ã—Ö, ${formData.children} –¥–µ—Ç–µ–π
üåç –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${formData.destination}
üìù –ü–æ–∂–µ–ª–∞–Ω–∏—è: ${formData.wishes}
		`

		try {
			// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –°–ª–∞–≤–µ –∏ –ï–≥–æ—Ä—É
			await Promise.all([
				fetch(TELEGRAM_API, {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify({ chat_id: USER_ID, text }),
				}),
			])

			setFormData({
				name: '',
				phone: '',
				adults: '',
				children: '',
				destination: '',
				wishes: '',
			})

			if (onClose) onClose()
			toast.success(
				'–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
			)
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error)
			toast.error(
				'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
			)
		}
	}

	return (
		<section className={`px-4 md:px-8 py-8 md:py-16 ${className}`}>
			<div className='max-w-2xl mx-auto'>
				<h2 className="text-2xl md:text-3xl lg:text-4xl font-['DelaGothicOne'] text-center mb-4">
					–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∏—Å–∫ —Ç—É—Ä–∞
				</h2>
				<p className="text-center text-gray-600 mb-8 font-['Montserrat']">
					–ó–∞—è–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥–µ—Ç –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É —Ç—É—Ä–∞–≥–µ–Ω—Å—Ç–≤–∞ –∏ —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è
					–≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
				</p>
				<form onSubmit={handleSubmit} className='space-y-6'>
					<div className='space-y-4'>
						<input
							type='text'
							name='name'
							value={formData.name}
							onChange={handleChange}
							placeholder='–í–∞—à–µ –∏–º—è'
							className='w-full px-6 py-3 rounded-full border border-gray-300 focus:outline-none focus:border-black transition-colors'
							required
						/>
						<input
							type='tel'
							name='phone'
							value={formData.phone}
							onChange={handleChange}
							placeholder='–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω'
							className='w-full px-6 py-3 rounded-full border border-gray-300 focus:outline-none focus:border-black transition-colors'
							required
						/>
						<div className='flex gap-4'>
							<input
								type='number'
								name='adults'
								value={formData.adults}
								onChange={handleChange}
								min='1'
								placeholder='–í–∑—Ä–æ—Å–ª—ã—Ö'
								className='w-full px-6 py-3 rounded-full border border-gray-300 focus:outline-none focus:border-black transition-colors'
							/>
							<input
								type='number'
								name='children'
								value={formData.children}
								onChange={handleChange}
								min='0'
								placeholder='–î–µ—Ç–µ–π'
								className='w-full px-6 py-3 rounded-full border border-gray-300 focus:outline-none focus:border-black transition-colors'
							/>
						</div>
						<input
							type='text'
							name='destination'
							value={formData.destination}
							onChange={handleChange}
							placeholder='–ö—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–µ—Ö–∞—Ç—å?'
							className='w-full px-6 py-3 rounded-full border border-gray-300 focus:outline-none focus:border-black transition-colors'
						/>
						<textarea
							name='wishes'
							value={formData.wishes}
							onChange={handleChange}
							placeholder='–ü—Ä–æ—á–∏–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –æ—Ç–¥—ã—Ö–∞'
							rows={4}
							className='w-full px-6 py-3 rounded-3xl border border-gray-300 focus:outline-none focus:border-black transition-colors resize-none'
						/>
					</div>
					<Button
						type='submit'
						className='w-full flex items-center justify-center gap-2'
						variant='primary'
						size='lg'
					>
						<span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</span>
						<svg
							width='20'
							height='20'
							viewBox='0 0 24 24'
							fill='none'
							xmlns='http://www.w3.org/2000/svg'
							className='rotate-45'
						>
							<path
								d='M5 12H19M19 12L12 5M19 12L12 19'
								stroke='currentColor'
								strokeWidth='2'
								strokeLinecap='round'
								strokeLinejoin='round'
							/>
						</svg>
					</Button>
				</form>
			</div>
		</section>
	)
}

export default Request
